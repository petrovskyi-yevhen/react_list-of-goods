{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","reorderedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAvBzB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAxDH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQf,GACN,KAAKL,EAASS,SACZ,OAAOU,EAAEE,cAAcD,GAEzB,KAAKpB,EAASW,OACZ,OAAOQ,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAINlB,EAAaa,EAAaL,UAAYK,EAqCpBM,CAAkBtB,EAAiBa,KAAKX,OAE/D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,uEAGLnB,IAAaL,EAASS,SAAW,WAAa,IAClDiB,QAASZ,KAAKP,eANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAS,0EAGLnB,IAAaL,EAASW,OAAS,WAAa,GAHvC,kBAKTe,QAASZ,KAAKJ,aAPhB,4BAYA,wBACEe,KAAK,SACLD,UAAS,0EAGJpB,EAA0B,GAAb,WAHT,kBAKTsB,QAASZ,KAAKF,QAPhB,sBAWEP,GAAYD,IAEV,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASZ,KAAKD,MAHhB,sBAUN,6BACE,6BACGE,EAAeY,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBAnFvB,GAAyBC,IAAMC,WCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.788ba931.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\n  type State = {\n    isReversed: boolean,\n    sortType: SortType,\n  };\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`\n              button\n              is-info\n              ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`\n              button\n              is-success\n              ${sortType !== SortType.LENGTH ? 'is-light' : ''}\n            `}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`\n              button\n              is-warning\n              ${!isReversed ? 'is-light' : ''}\n            `}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          {(sortType || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}